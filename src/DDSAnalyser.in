#!/usr/bin/env python

import sys, getopt
sys.path.insert(1, '@pythondir@')

import tensorflow as tf
import pandas as pd
import numpy as np

from DataDrivenSampler.version import get_package_version, get_build_hash
from DataDrivenSampler.common import get_filename_from_fullpath, setup_csv_file
from DataDrivenSampler.TrajectoryAnalyser import parse_parameters, moving_average

FLAGS = None


def main(_):
    # load trajectory
    df = pd.read_csv(FLAGS.csv_file, sep=',', header=0)
    trajLoaded=np.asarray(df.loc[:,['step','loss','kinetic_energy']])

    traj=trajLoaded[::FLAGS.every_nth,:]

    steps=traj[:,0]
    loss=traj[:,1]
    kinetic_energy=traj[:,2]
    no_steps = len(steps)

    print("%d steps." % (no_steps))
    print("%lg average and %lg variance in loss." % (np.average(loss), loss.var()))

    end_list = np.arange(1,FLAGS.steps+1)*int(no_steps/FLAGS.steps)-1
    print(str(end_list))
    avg = [np.average(kinetic_energy[0:end]) for end in end_list]
    actual_steps = [steps[end] for end in end_list]
    print("Average final kinetic energy "+str(avg))
    #    print("Moving average kinetic energy: "+str(avg_kinetic[::10]))

    csv_writer, csv_file = setup_csv_file(FLAGS.output_file, ['step', 'average_kinetic_energy'])
    for step, avg in zip(actual_steps, avg):
        csv_writer.writerow([step, avg])
    csv_file.close()

if __name__ == '__main__':
    FLAGS, unparsed = parse_parameters()

    if FLAGS.version:
        # give version and exit
        print(get_filename_from_fullpath(sys.argv[0])+" "+get_package_version()+" -- version "+get_build_hash())
        sys.exit(0)

    print("Using parameters: "+str(FLAGS))
    tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)

