#
#    DataDrivenSampler - explore high-dimensional manifold of neural networks
#    Copyright (C) 2017 The University of Edinburgh
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
### test on reproducible runs using two clusters dataset

AT_SETUP([Sampler Options - inverse temperature])
AT_KEYWORDS([options ddsampler inverse_temperature])

# run 1
AT_CHECK([../../../DDSampler \
	--batch_size 10 \
	--run_file run-inverse_temperature_1.csv \
	--data_type 2 \
	--dimension 20 \
	--friction_constant 1 \
	--inverse_temperature 1 \
	--step_width 1e-2 \
	--max_steps 20 \
	--sampler GeometricLangevinAlgorithm_1stOrder\
	--seed 426
], 0, [stdout], [stderr])

# run 2
AT_CHECK([../../../DDSampler \
	--batch_size 10 \
	--run_file run-inverse_temperature_1e5.csv \
	--data_type 2 \
	--dimension 20 \
	--friction_constant 1 \
	--inverse_temperature 1e5 \
	--step_width 1e-2 \
	--max_steps 20 \
	--sampler GeometricLangevinAlgorithm_1stOrder\
	--seed 426
], 0, [stdout], [stderr])

# check that both differ, i.e. step_width is used
AT_CHECK([diff run-inverse_temperature_1.csv run-inverse_temperature_1e5.csv], 1, [ignore], [ignore])

AT_CLEANUP


AT_SETUP([Sampler Options - inverse temperature fails with SGLD])
AT_KEYWORDS([options ddsampler inverse_temperature sgld])
AT_CHECK([../../../DDSampler \
	--batch_size 10 \
	--data_type 2 \
	--dimension 20 \
	--friction_constant 1 \
	--inverse_temperature 1 \
	--step_width 1e-2 \
	--max_steps 20 \
	--sampler StochasticGradientLangevinDynamics \
], 1, [stdout], [stderr])

AT_CLEANUP
